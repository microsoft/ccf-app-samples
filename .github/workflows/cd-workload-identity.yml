name: "deploy-mccf-resource"

on: 
  workflow_dispatch:
    inputs:
      parameter:
          description: "Workflow to deploy Managed CCF and test sample apps"
  pull_request:

jobs:
  deploy:
    name: Managed CCF
    runs-on: ubuntu-20.04
    environment: dev
    env:
      ccfName: mCCF${{ github.run_number }}
      ResourceGroupLocation: "westeurope"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Azure Login
        uses: Azure/login@v1.4.5
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to GH-CR to push the updated devcontainer image
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Resource Group
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            #!/bin/bash
            az group create --name ${{ env.ccfName }} --location ${{ env.ResourceGroupLocation }}

      - name: Deploy Managed CCF Network
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.ccfName }}
          template: ./deploy/arm/mccf.json
          parameters: ./deploy/arm/parameters.json mccfMemberBasedSecurityPrincipals="[{\"cert\":\"${{ secrets.PUBLIC_CERT }}\", \"encryptionKey\":\"\"}]" resourceName="${{ env.ccfName }}"

      - name: Deploy Data Reconciliation Sample to mCCF
        uses: devcontainers/ci@v0.2
        with:
          imageName: ghcr.io/microsoft/ccf-samples-devcontainer
          runCmd: |
            cd data-reconciliation-app && make test-mccf
          env: |
            PUBLIC_CERT=${{ secrets.PUBLIC_CERT }}
            PRIVATE_CERT=${{ secrets.PRIVATE_CERT }}
            CCF_NAME=${{ env.ccfName }}

      - name: Delete Resource Group
        uses: Azure/CLI@v1
        if: always()
        with:
          inlineScript: |
            #!/bin/bash
            echo "Always delete resource group because of quota"
            az group delete --name ${{ env.ccfName }} --yes --no-wait
